@model Expending_Card.Models.ExpendingViewModel

@{
    ViewBag.Title = "編輯記帳明細";
    Layout = "_Layout";
}

<div class="row">
    <div class="col-12">
        <h2>全部記帳明細</h2>
    </div>
    <div class="col-12">
        <div class="col-6 input-group">
            <select class="custom-select" id="sort-list">
                <option selected>選擇明細排列方式-</option>
                <option value="order-asc">Detail Order (ASC)</option>
                <option value="order-desc">Detail Order (DESC)</option>
                <option value="card-asc">Card order (ASC)</option>
                <option value="card-desc">Card order (DESC)</option>
                <option value="date-asc">Date (ASC)</option>
                <option value="date-desc">Date (DESC)</option>
                <option value="price-asc">Price (ASC)</option>
                <option value="price-desc">Price (DESC)</option>
            </select>
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="button" onclick="sortDetails();">Sort Details</button>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <table class="table">
        <thead class="thead-light">
        <tr>
            <th scope="col">Order</th>
            <th scope="col">Date</th>
            <th scope="col" colspan="2">Details</th>
            <th scope="col">Price</th>
            <th scope="col">Card</th>
            <th scope="col"></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in @Model.DetailViewModel.Details)
        {
            <tr>
                <td name="order" class="align-middle detail-order text-center">@item.Order</td>
                <td class="align-middle">@item.Date</td>
                <td colspan="2" class="align-middle">@item.Detail</td>
                <td class="align-middle">@item.Price</td>
                <td class="align-middle">@item.Card.Name</td>
                <td>
                    <button type="button" class="btn btn-light" onclick="deleteDetail(this);">Delete</button>
                </td>
            </tr>
        }
        
        <tr>
            <td id="order" class="align-middle justify-content-center">
                <input disabled type="text" class="form-control col-lg-10" name="order" value="@ViewBag.DetailNextOrder">
            </td>
            <td class="align-middle">
                <input type="text" class="form-control col-lg-10" name="date" placeholder="時間">
            </td>
            <td colspan="2" class="align-middle">
                <input type="text" class="form-control col-lg-10" name="detail" placeholder="明細">
            </td>
            <td class="align-middle">
                <input type="text" class="form-control col-lg-10" name="price" placeholder="價格">
            </td>
            <td class="align-middle">
                <input type="text" class="form-control col-lg-10" name="card" placeholder="卡片">
            </td>
            <td class="align-middle">
                <button type="button" class="btn btn-light" onclick="createDetail(this);">Create</button>
            </td>
        </tr>
        
        <tr>
            <td id="order" class="align-middle text-center">
                <select class="form-control col-lg-10" name="order" id="update-order">
                    @{
                        foreach (var item in Model.DetailViewModel.Details)
                        {
                            <option value="@item.Order">@item.Order</option>
                        }
                    }
                </select>
            </td>
            <td class="align-middle">
                <input type="text" class="form-control col-lg-10" name="date" placeholder="時間">
            </td>
            <td colspan="2" class="align-middle">
                <input type="text" class="form-control col-lg-10" name="detail" placeholder="明細">
            </td>
            <td class="align-middle">
                <input type="text" class="form-control col-lg-10" name="price" placeholder="價格">
            </td>
            <td class="align-middle">
                <input type="text" class="form-control col-lg-10" name="card" placeholder="卡片">
            </td>
            <td class="align-middle">
                <button type="button" class="btn btn-light" onclick="updateDetail(this);">Update</button>
            </td>
        </tr>
        </tbody>
    </table>
</div>

@section Scripts
{
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>


    <script>    
    
    const detailRequest = axios.create({
        baseURL: "https://localhost:5001/Details"
    })
    
    const cardRequest = axios.create({
        baseURL: "https://localhost:5001/CatalogCard"
    })
    
    let cards = [];
    @foreach (var item in Model.CardViewModel.Cards)
    {
        @:cards.push('@item.Name');
    }
    
    function detailsEdit(url,data){
        detailRequest.post(url, data)
        .then( (res) => {
            if (url != '/SortDetails') {
                alert(res.data);
            }
            location.reload();
        })
        .catch( (error) => {
            alert(error.response.data)
        })
    }
    
    function createDetail(obj) {
        let tr = $(obj).closest("tr");

        let order = parseInt(getInputData(tr, 'order'));
        let date = getInputData(tr, 'date');
        let detail = getInputData(tr, 'detail');
        let price = parseInt(getInputData(tr, 'price'));
        let cardName = getInputData(tr, 'card')
        
        if (cardName=="" || detail=="" || price==0 || date=="") {
            
            if (price<0) {
                alert("價格不得小於等於0元")
                return ;
            }
            
            alert("建立明細時不能有任何空白欄位")
            return ;
        }

        let card;
        let cardData = new URLSearchParams();
        cardData.append("name", cardName);
        
        if (cards.indexOf(cardName) <= 0) {
            cardRequest.post('/AddCardForDetail', cardData)
            let cardOrder = cardRequest.post('/GetCardsOrder').then((res) => {
                console.log(res.data);
                return parseInt(res.data)
            })
            console.log(cardOrder);
            
            card = {
                order: cardOrder,
                name: cardName
            }
        }
        
        let data = {
            order: order,
            date: date,
            detail: detail,
            price: price,
            card: card,
        }
        
        detailsEdit("/Add", data)
    }
    
    function deleteDetail(obj) {
        let order = $(obj).closest("tr").find(".detail-order").text();
        let data = new URLSearchParams();
        data.append("order",order);
        
        detailsEdit("/Delete", data)
    }
    
    function updateDetail(obj) {
        let tr = $(obj).closest("tr");
        let order = $("#update-order").val();
        
        let data = {
            order: parseInt(order),
            date: getInputData(tr, 'date'),
            detail: getInputData(tr, 'detail'),
            price: parseInt(getInputData(tr, 'price')),
            card: getInputData(tr, 'card')
        }
        
        detailsEdit("/Update", data)
    }
    
    function sortDetails() {
        let sort = $("#sort-list").val();
        let data = new URLSearchParams();
        data.append("data", sort);
        
        detailsEdit("/SortDetails", data)
    }
    
    function getInputData(html, name) {
        return html.find(`input[name='${name}']`).val()
    }
    
    </script>
}
